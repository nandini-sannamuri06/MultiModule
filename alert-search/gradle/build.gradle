apply plugin: 'base'
apply plugin: 'cloudfoundry'

project.ext {
    junitVersion = '4.12'
    mockitoVersion = '1.9.5'
    hamcrestVersion = '1.3'
}

def shortSha() {
    project.gitSha.substring(0, 7)
}

allprojects {
    group 'com.gap.ordermanage'
    version "1.0.0.${shortSha()}"

    repositories {
        jcenter()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4'
}

buildscript {
    repositories {
        ivy {
            name "remote_repos_ivy"
            layout "maven"
            url "http://artifactory.gapinc.dev/artifactory/local-non-prod"
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE'
        classpath 'org.cloudfoundry:cf-gradle-plugin:1.1.3'
        classpath 'com.gap.fedci.gradle:fedci-gradle-plugins:1.20.0.2f107a6'
    }
}

repositories {
    mavenCentral()
}

apply from: 'gradle/deploy.gradle'

cloudfoundry {
    if (cfServices) {
        services {
            new groovy.json.JsonSlurper().parseText(cfServices).each { service ->
                def serviceExt = new org.cloudfoundry.gradle.CloudFoundryServiceExtension(service.key)
                serviceExt.label = service.value.label
                if (service.value.plan) { serviceExt.plan = service.value.plan }
                if (service.value.bind) { serviceExt.bind = service.value.bind }
                it << serviceExt
            }
        }
    }
}
